class Compactor
    {
        MemoryStream prev;
        MemoryStream stream =  new MemoryStream();
        public Action<MemoryStream> OnOut;
        int remaining = 64000;
        public void Push(MemoryStream curr)
        {
            if (curr.Position >= 64000)
            {
                Flush();
                prev = curr;
                Flush();
            }
            else if(prev == null)
            {
                prev = curr;
            }
            else if(curr.Position + prev.Position < remaining) 
            {
                stream.Write(prev.GetBuffer(),0,(int)prev.Position);
                remaining -= (int)prev.Position;
                prev = curr;
            }
            else 
            {
                Flush();
                prev = curr;
                Flush();
            }
        }

        public void Flush()
        {
            if (stream.Position >0) 
            {
                OnOut(stream);
                stream.Position = 0;
                remaining = 64000;
            }
            if(prev != null)
            {
                OnOut(prev);
                prev = null;
            }
        }
    }
